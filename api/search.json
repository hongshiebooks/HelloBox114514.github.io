[{"id":"1e3438bfaaeb42864f247dd4771179e2","title":"1","content":"\n","slug":"1","date":"2023-08-17T09:51:56.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"80d50753b95c3e0b355086e32f96911a","title":"代码搭建NewBing","content":"大家好，我是红石Hong，欢迎来到我的个人博客\n接下来，我将用十分钟，教你搭建一个国内可用的NewBing\n无需魔法无需候补账号无需服务器，域名小白也能部署的网站！接下来，让我们开始吧\n注册HuggingFace账号我们需要前往HuggingFace注册一个账号 \n、\n开始搭建NewBing项目源码\n# Build Stage\n# 使用 golang:alpine 作为构建阶段的基础镜像\nFROM golang:alpine AS builder\n\n# 添加 git，以便之后能从GitHub克隆项目\nRUN apk --no-cache add git\n\n# 从 GitHub 克隆 go-proxy-bingai 项目到 &#x2F;workspace&#x2F;app 目录下\nRUN git clone https:&#x2F;&#x2F;github.com&#x2F;Harry-zklcdc&#x2F;go-proxy-bingai.git &#x2F;workspace&#x2F;app\n\n# 设置工作目录为之前克隆的项目目录\nWORKDIR &#x2F;workspace&#x2F;app\n\n# 编译 go 项目。-ldflags&#x3D;&quot;-s -w&quot; 是为了减少编译后的二进制大小\nRUN go build -ldflags&#x3D;&quot;-s -w&quot; -tags netgo -trimpath -o go-proxy-bingai main.go\n\n# Runtime Stage\n# 使用轻量级的 alpine 镜像作为运行时的基础镜像\nFROM alpine\n\n# 设置工作目录\nWORKDIR &#x2F;workspace&#x2F;app\n\n# 从构建阶段复制编译后的二进制文件到运行时镜像中\nCOPY --from&#x3D;builder &#x2F;workspace&#x2F;app&#x2F;go-proxy-bingai .\n\n# 设置环境变量，此处为随机字符\nENV Go_Proxy_BingAI_USER_TOKEN_1&#x3D;&quot;kJs8hD92ncMzLaoQWYtX5rG6bE3fZ4iO&quot;\n\n# 暴露8080端口\nEXPOSE 8080\n\n# 容器启动时运行的命令\nCMD [&quot;&#x2F;workspace&#x2F;app&#x2F;go-proxy-bingai&quot;]\n\n自述文件添加\napp_port: 8080\n\n（喂，不去我的B站主页看看吗？）\n","slug":"NewBing镜像站部署","date":"2023-08-17T04:18:42.000Z","categories_index":"","tags_index":"","author_index":"Aurora"}]